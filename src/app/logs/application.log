{"level":"info","message":"listening on port 3000"}
{"level":"info","message":{"duration":735,"params":"[]","query":"db.User.aggregate([ { $match: { $expr: { $and: [ { $and: [ { $and: [ { $eq: [ \"$email\", { $literal: \"johndoe@example.com\", }, ], }, { $ne: [ \"$email\", \"$$REMOVE\", ], }, ], }, ], }, { }, ], }, }, }, { $project: { _id: 1, name: 1, email: 1, password: 1, createdAt: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T12:42:54.042Z"}}
{"level":"info","message":{"duration":38,"params":"[]","query":"db.User.insertOne({ name: \"John Doe\", email: \"johndoe@example.com\", password: \"$2b$10$GpAWx1AzgUe/nNMzWDakmeA.GdJDJNN3LK7AMk2j7FP2l4oAJcjGG\", createdAt: DateTime(\"2024-11-29 12:42:54.091 +00:00:00\"), })","target":"mongodb_query_connector::query","timestamp":"2024-11-29T12:42:54.132Z"}}
{"level":"info","message":{"duration":32,"params":"[]","query":"db.User.aggregate([ { $match: { $expr: { $and: [ { $and: [ { $eq: [ \"$_id\", { $literal: ObjectId(\"6749b6ceebe02cd6f50b7288\"), }, ], }, { $ne: [ \"$_id\", \"$$REMOVE\", ], }, ], }, ], }, }, }, { $project: { _id: 1, name: 1, email: 1, password: 1, createdAt: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T12:42:54.165Z"}}
{"level":"info","message":"listening on port 3000"}
{"level":"info","message":"listening on port 3000"}
{"level":"info","message":"listening on port 3000"}
{"level":"info","message":"listening on port 3000"}
{"level":"info","message":"listening on port 3000"}
{"level":"info","message":"listening on port 3000"}
{"level":"info","message":{"duration":30015,"params":"[]","query":"db.Category.aggregate([ { $limit: 1, }, { $project: { _id: 1, name: 1, description: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T16:11:32.279Z"}}
{"level":"error","message":"\nInvalid `prismaClient.category.findFirst()` invocation in\nC:\\Portofolio\\inventaris-express-rest-api\\src\\services\\category.service.ts:9:56\n\n  6 \n  7 export class CategoryService {\n  8     static async getAll(): Promise<CategoryResponse> {\n→ 9         const categories = await prismaClient.category.findFirst(\nRaw query failed. Code: `unknown`. Message: `Kind: Server selection timeout: No available servers. Topology: { Type: ReplicaSetNoPrimary, Set Name: atlas-oyq9zt-shard-0, Servers: [ { Address: cluster0-shard-00-00.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-02.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-01.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} } ] }, labels: {}`","target":"category.findFirst","timestamp":"2024-11-29T16:11:32.286Z"}
{"level":"info","message":{"duration":30010,"params":"[]","query":"db.User.aggregate([ { $match: { $expr: { $and: [ { $and: [ { $and: [ { $eq: [ \"$email\", { $literal: \"johndoe@example.com\", }, ], }, { $ne: [ \"$email\", \"$$REMOVE\", ], }, ], }, ], }, { }, ], }, }, }, { $project: { _id: 1, name: 1, email: 1, password: 1, createdAt: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T16:15:29.070Z"}}
{"level":"error","message":"\nInvalid `prismaClient.user.findUnique()` invocation in\nC:\\Portofolio\\inventaris-express-rest-api\\src\\services\\user.service.ts:42:42\n\n  39   request\n  40 );\n  41 \n→ 42 const user = await prismaClient.user.findUnique(\nRaw query failed. Code: `unknown`. Message: `Kind: Server selection timeout: No available servers. Topology: { Type: ReplicaSetNoPrimary, Set Name: atlas-oyq9zt-shard-0, Servers: [ { Address: cluster0-shard-00-00.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-02.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-01.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} } ] }, labels: {}`","target":"user.findUnique","timestamp":"2024-11-29T16:15:29.076Z"}
{"level":"info","message":{"duration":30001,"params":"[]","query":"db.User.aggregate([ { $match: { $expr: { $and: [ { $and: [ { $and: [ { $eq: [ \"$email\", { $literal: \"johndoe@example.com\", }, ], }, { $ne: [ \"$email\", \"$$REMOVE\", ], }, ], }, ], }, { }, ], }, }, }, { $project: { _id: 1, name: 1, email: 1, password: 1, createdAt: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T16:22:59.682Z"}}
{"level":"error","message":"\nInvalid `prismaClient.user.findUnique()` invocation in\nC:\\Portofolio\\inventaris-express-rest-api\\src\\services\\user.service.ts:42:42\n\n  39   request\n  40 );\n  41 \n→ 42 const user = await prismaClient.user.findUnique(\nRaw query failed. Code: `unknown`. Message: `Kind: Server selection timeout: No available servers. Topology: { Type: ReplicaSetNoPrimary, Set Name: atlas-oyq9zt-shard-0, Servers: [ { Address: cluster0-shard-00-00.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-02.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-01.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} } ] }, labels: {}`","target":"user.findUnique","timestamp":"2024-11-29T16:22:59.685Z"}
{"level":"info","message":{"duration":30007,"params":"[]","query":"db.User.aggregate([ { $match: { $expr: { $and: [ { $and: [ { $and: [ { $eq: [ \"$email\", { $literal: \"johndoe2@example.com\", }, ], }, { $ne: [ \"$email\", \"$$REMOVE\", ], }, ], }, ], }, { }, ], }, }, }, { $project: { _id: 1, name: 1, email: 1, password: 1, createdAt: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T16:52:48.125Z"}}
{"level":"error","message":"\nInvalid `prismaClient.user.findUnique()` invocation in\nC:\\Portofolio\\inventaris-express-rest-api\\src\\services\\user.service.ts:17:48\n\n  14   request\n  15 );\n  16 \n→ 17 const checkEmail = await prismaClient.user.findUnique(\nRaw query failed. Code: `unknown`. Message: `Kind: Server selection timeout: No available servers. Topology: { Type: ReplicaSetNoPrimary, Set Name: atlas-oyq9zt-shard-0, Servers: [ { Address: cluster0-shard-00-00.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-02.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} }, { Address: cluster0-shard-00-01.sta3h.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: received fatal alert: InternalError, labels: {} } ] }, labels: {}`","target":"user.findUnique","timestamp":"2024-11-29T16:52:48.128Z"}
{"level":"info","message":{"duration":773,"params":"[]","query":"db.User.aggregate([ { $match: { $expr: { $and: [ { $and: [ { $and: [ { $eq: [ \"$email\", { $literal: \"johndoe2@example.com\", }, ], }, { $ne: [ \"$email\", \"$$REMOVE\", ], }, ], }, ], }, { }, ], }, }, }, { $project: { _id: 1, name: 1, email: 1, password: 1, createdAt: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T16:54:02.806Z"}}
{"level":"info","message":{"duration":38,"params":"[]","query":"db.Category.aggregate([ { $limit: 1, }, { $project: { _id: 1, name: 1, description: 1, }, }, ])","target":"mongodb_query_connector::query","timestamp":"2024-11-29T16:54:17.030Z"}}
